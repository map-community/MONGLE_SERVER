name: Mongle CD Pipeline

on:
  workflow_dispatch:
    inputs:
      target:
        description: '배포할 환경 선택 (dev / prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      branch:
        description: '배포할 브랜치 이름'
        required: true
        default: 'develop'
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.target }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/mongle-app:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/mongle-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Copy deployment files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            docker-compose.yml
            scripts/deploy.sh
          target: "/home/ubuntu/mongle"
          strip_components: 1

      - name: Run Docker Compose on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/mongle
            echo "${{ secrets.ENV_FILE }}" > .env
            mkdir -p ./config/keys
            echo "${{ secrets.CLOUDFRONT_PRIVATE_KEY }}" > ./config/keys/private_key.pem
            
            chmod +x ./deploy.sh
            
            export DOCKER_IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/mongle-app"
            export IMAGE_TAG="${{ github.sha }}"
            
            ./deploy.sh
            
            echo ">>> Cleaning up old docker images"
            docker image prune -f